<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright 2017 Red Hat, Inc.
 ~
 ~  Licensed under the Apache License, Version 2.0 (the "License");
 ~  you may not use this file except in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing, software
 ~  distributed under the License is distributed on an "AS IS" BASIS,
 ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~  See the License for the specific language governing permissions and
 ~  limitations under the License.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.smallrye</groupId>
        <artifactId>smallrye-build-parent</artifactId>
        <version>45</version>
    </parent>

    <artifactId>smallrye-fault-tolerance-parent</artifactId>
    <version>6.9.4-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>SmallRye Fault Tolerance: Parent</name>
    <url>https://smallrye.io</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <!--
          - need to stay on Jakarta EE 10 dependencies for now, because:
          - * Weld 6.0 requires Java 17, and we need to support Java 11 still
          - * WildFly still supports Jakarta EE 10
         -->

        <!-- Jakarta Annotations: 2.1 is EE 10, 3.0 is EE 11, 3.1 will be EE 12 -->
        <version.jakarta-annotations>2.1.1</version.jakarta-annotations>
        <!-- Jakarta CDI: 4.0 is EE 10, 4.1 is EE 11, 5.0 will be EE 12 -->
        <version.jakarta-cdi>4.0.1</version.jakarta-cdi>
        <!-- Jakarta Interceptors: 2.1 is EE 10, 2.2 is EE 11 -->
        <version.jakarta-interceptors>2.1.0</version.jakarta-interceptors>
        <version.javapoet>1.13.0</version.javapoet>
        <version.jboss-logging>3.6.1.Final</version.jboss-logging>
        <version.jboss-logging-tools>3.0.4.Final</version.jboss-logging-tools>
        <version.kotlin>2.2.21</version.kotlin>
        <version.kotlin-dokka>2.1.0</version.kotlin-dokka>
        <version.kotlinx-coroutines>1.10.2</version.kotlinx-coroutines>
        <!-- Micrometer 1.13.0 has a breaking change in Prometheus library -->
        <version.micrometer-core>1.12.5</version.micrometer-core>
        <version.microprofile-fault-tolerance>4.1.2</version.microprofile-fault-tolerance>
        <version.microprofile-config-api>3.1</version.microprofile-config-api>
        <version.microprofile-metrics-api>4.0.1</version.microprofile-metrics-api>
        <version.microprofile-context-propagation-api>1.3</version.microprofile-context-propagation-api>
        <!-- this is the last Mutiny version that supports Java 11 -->
        <version.mutiny>3.0.1</version.mutiny>
        <!-- OpenTelemetry 1.48.0 is required by MicroProfile Telemetry 2.1 (MP Platform 7.1) -->
        <version.opentelemetry>1.48.0</version.opentelemetry>
        <version.opentracing>0.33.0</version.opentracing>
        <version.rxjava3>3.1.12</version.rxjava3>
        <!-- this is the last SmallRye Common version that supports Java 11 -->
        <version.smallrye-common>2.8.0</version.smallrye-common>
        <!-- smallrye-config is purely used for testing -->
        <!-- this is the last SmallRye Config version that supports Java 11 -->
        <version.smallrye-config>3.10.2</version.smallrye-config>
        <!-- smallrye-context-propagation is purely used for testing -->
        <version.smallrye-context-propagation>2.2.1</version.smallrye-context-propagation>
        <!-- smallrye-metrics is purely used for testing -->
        <version.smallrye-metrics>4.0.0</version.smallrye-metrics>
        <!-- smallrye-opentelemetry is purely used for testing -->
        <version.smallrye-opentelemetry>2.10.1</version.smallrye-opentelemetry>
        <version.vertx>4.5.21</version.vertx>

        <version.arquillian>1.10.0.Final</version.arquillian>
        <!-- Arquillian Weld: 3.0 is EE 10, 4.0 is EE 11 -->
        <version.arquillian-weld>3.0.2.Final</version.arquillian-weld>
        <version.assertj>3.27.6</version.assertj>
        <version.awaitility>4.3.0</version.awaitility>
        <!-- JUnit Jupiter 6.0 makes small but breaking changes -->
        <version.junit-jupiter>5.14.0</version.junit-jupiter>
        <version.testng>7.11.0</version.testng>
        <!-- Weld API: 5.0 is EE 10, 6.0 is EE 11, 7.0 will be EE 12 -->
        <version.weld-api>5.0.SP3</version.weld-api>
        <!-- Weld Core: 5.1 is EE 10, 6.0 is EE 11, 7.0 will be EE 12 -->
        <version.weld-core>5.1.6.Final</version.weld-core>
        <!-- Weld JUnit: 4.0 is EE 10, 5.0 is EE 11 -->
        <version.weld-junit5>4.0.5.Final</version.weld-junit5>

        <version.jacoco-maven-plugin>0.8.14</version.jacoco-maven-plugin>
        <version.pitest-maven>1.21.0</version.pitest-maven>
        <version.pitest-junit5-plugin>1.2.3</version.pitest-junit5-plugin>
        <version.sundrio>0.230.1</version.sundrio>

        <sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    </properties>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/smallrye/smallrye-fault-tolerance/issues</url>
    </issueManagement>

    <scm>
        <connection>scm:git:git@github.com:smallrye/smallrye-fault-tolerance.git</connection>
        <developerConnection>scm:git:git@github.com:smallrye/smallrye-fault-tolerance.git</developerConnection>
        <url>https://github.com/smallrye/smallrye-fault-tolerance/</url>
        <tag>HEAD</tag>
    </scm>

    <modules>
        <module>api</module>
        <module>implementation</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>${version.jakarta-annotations}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.enterprise</groupId>
                <artifactId>jakarta.enterprise.cdi-api</artifactId>
                <version>${version.jakarta-cdi}</version>
                <exclusions>
                    <exclusion>
                        <groupId>jakarta.el</groupId>
                        <artifactId>jakarta.el-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>jakarta.interceptor</groupId>
                <artifactId>jakarta.interceptor-api</artifactId>
                <version>${version.jakarta-interceptors}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.config</groupId>
                <artifactId>microprofile-config-api</artifactId>
                <version>${version.microprofile-config-api}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.metrics</groupId>
                <artifactId>microprofile-metrics-api</artifactId>
                <version>${version.microprofile-metrics-api}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.context-propagation</groupId>
                <artifactId>microprofile-context-propagation-api</artifactId>
                <version>${version.microprofile-context-propagation-api}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.fault-tolerance</groupId>
                <artifactId>microprofile-fault-tolerance-api</artifactId>
                <version>${version.microprofile-fault-tolerance}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.osgi</groupId>
                        <artifactId>org.osgi.annotation.versioning</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.eclipse.microprofile.fault-tolerance</groupId>
                <artifactId>microprofile-fault-tolerance-tck</artifactId>
                <version>${version.microprofile-fault-tolerance}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.squareup</groupId>
                <artifactId>javapoet</artifactId>
                <version>${version.javapoet}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>${version.micrometer-core}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye.common</groupId>
                <artifactId>smallrye-common-annotation</artifactId>
                <version>${version.smallrye-common}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye.reactive</groupId>
                <artifactId>mutiny</artifactId>
                <version>${version.mutiny}</version>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-api</artifactId>
                <version>${version.opentelemetry}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-api</artifactId>
                <version>${version.opentracing}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-util</artifactId>
                <version>${version.opentracing}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-mock</artifactId>
                <version>${version.opentracing}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-util</artifactId>
                <version>${version.opentracing}</version>
                <type>test-jar</type>
            </dependency>
            <dependency>
                <groupId>io.reactivex.rxjava3</groupId>
                <artifactId>rxjava</artifactId>
                <version>${version.rxjava3}</version>
            </dependency>
            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-core</artifactId>
                <version>${version.vertx}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging</artifactId>
                <version>${version.jboss-logging}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging-annotations</artifactId>
                <version>${version.jboss-logging-tools}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging-processor</artifactId>
                <version>${version.jboss-logging-tools}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${version.kotlin}</version>
            </dependency>

            <dependency>
                <groupId>io.smallrye.config</groupId>
                <artifactId>smallrye-config</artifactId>
                <version>${version.smallrye-config}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-context-propagation-cdi</artifactId>
                <version>${version.smallrye-context-propagation}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-metrics</artifactId>
                <version>${version.smallrye-metrics}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.smallrye.opentelemetry</groupId>
                <artifactId>smallrye-opentelemetry-cdi</artifactId>
                <version>${version.smallrye-opentelemetry}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.smallrye.opentelemetry</groupId>
                <artifactId>smallrye-opentelemetry-config</artifactId>
                <version>${version.smallrye-opentelemetry}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.smallrye.opentelemetry</groupId>
                <artifactId>smallrye-opentelemetry-exporters</artifactId>
                <version>${version.smallrye-opentelemetry}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlinx</groupId>
                <artifactId>kotlinx-coroutines-jdk9</artifactId>
                <version>${version.kotlinx-coroutines}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${version.assertj}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${version.awaitility}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-api</artifactId>
                <version>${version.weld-api}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-spi</artifactId>
                <version>${version.weld-api}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-core-impl</artifactId>
                <version>${version.weld-core}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld.se</groupId>
                <artifactId>weld-se-core</artifactId>
                <version>${version.weld-core}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-junit5</artifactId>
                <version>${version.weld-junit5}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${version.junit-jupiter}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${version.testng}</version>
                <scope>test</scope>
            </dependency>

            <!-- Dependencies provided by the project -->
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-core</artifactId>
                <type>test-jar</type>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-kotlin</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-mutiny</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-rxjava3</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-vertx</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-autoconfig-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-autoconfig-processor</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-apiimpl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-context-propagation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-tracing-propagation</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-standalone</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-fault-tolerance-standalone</artifactId>
                <type>test-jar</type>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>io.sundr</groupId>
                <artifactId>sundr-maven-plugin</artifactId>
                <version>${version.sundrio}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate-bom</goal>
                        </goals>
                        <configuration>
                            <boms>
                                <bom>
                                    <artifactId>smallrye-fault-tolerance-bom</artifactId>
                                    <name>Smallrye Fault Tolerance: BOM</name>
                                    <description>Centralized dependencyManagement for the SmallRye Fault Tolerance Project</description>
                                    <modules>
                                        <excludes>
                                            <exclude>io.smallrye:smallrye-fault-tolerance-tck</exclude>
                                            <exclude>io.smallrye:smallrye-fault-tolerance-testsuite*</exclude>
                                        </excludes>
                                    </modules>
                                </bom>
                            </boms>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>not-release</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>!true</value>
                </property>
            </activation>
            <modules>
                <module>testsuite</module>
            </modules>
        </profile>

        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>!release.maven.bug.always.be.active</name>
                </property>
            </activation>
            <modules>
                <module>release</module>
            </modules>
        </profile>
    </profiles>
</project>
